import javax.tools.ToolProvider

plugins {
    id 'java'
    id 'idea'
}

repositories {
    jcenter()
}

def toolsJar = files((ToolProvider.systemToolClassLoader as URLClassLoader)
        .URLs
        .find({ url -> url.toString().contains("tools") }))

dependencies {
    implementation toolsJar
    implementation project(':coco-api')

    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'com.google.inject:guice:4.1.0'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.apache.commons:commons-collections4:4.4'

    implementation 'org.apache.logging.log4j:log4j-api:2.7'
    implementation 'org.apache.logging.log4j:log4j-core:2.7'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.7'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.5.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testImplementation 'org.assertj:assertj-core:3.11.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    useJUnitPlatform()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
