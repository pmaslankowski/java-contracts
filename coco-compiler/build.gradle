import javax.tools.ToolProvider

plugins {
}

repositories {
    jcenter()
}

def toolsJar = files((ToolProvider.systemToolClassLoader as URLClassLoader)
        .URLs
        .find({ url -> url.toString().contains("tools") }))

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.1-jre'
    implementation toolsJar

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    useJUnitPlatform()
}
